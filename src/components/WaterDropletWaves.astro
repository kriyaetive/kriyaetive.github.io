---

---

<style>
    /* Water Droplet Waves Animation */
    /* @keyframes wave {
        0% {
            transform: scale(0);
            opacity: 1;
        }
        100% {
            transform: scale(3);
            opacity: 0;
        }
    } */

    .wave {
        position: absolute;
        top: 50%;
        left: 5%;
        width: 20rem;
        height: 20rem;
        margin-left: -10rem; /* Adjust to center horizontally */
        margin-top: -10rem; /* Adjust to center vertically */
        border-radius: 50%;
        background: rgb(254, 215, 3); /* Yellow color */
        animation: wave 4s ease-in-out forwards;
        z-index: 1;
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0; /* Initially hidden */
        transition:
            opacity 1s ease-in-out,
            transform 1s ease-in-out;
    }

    .wave:nth-child(2) {
        animation-delay: 1s;
    }

    .wave:nth-child(3) {
        animation-delay: 2s;
    }

    .wave:nth-child(4) {
        animation-delay: 3s;
    }

    .wave-end-state {
        opacity: 1; /* Show the wave div after animation ends */
        transform: scale(1);
        transition:
            transform 1s ease,
            opacity 1s ease;
    }

    .icons {
        display: flex;
        gap: 1rem;
    }

    .material-icons {
        font-size: 2rem;
        color: #000; /* Black color for icons */
        transition: transform 0.3s ease;
    }

    .material-icons:hover {
        transform: scale(1.2); /* Slightly enlarge the icon on hover */
    }
</style>

<!-- Initial Waves -->
<div class="wave"></div>
<div class="wave"></div>
<div class="wave"></div>
<div class="wave"></div>

<script>
    // Ensure the DOM is fully loaded before adding event listeners
    document.addEventListener("DOMContentLoaded", () => {
        console.log("DOM fully loaded and parsed");

        document.querySelectorAll(".wave").forEach((wave, index) => {
            console.log(`Attaching event listener to wave ${index}`);

            // Listen for both standard and webkit-prefixed animation end events
            wave.addEventListener("animationend", handleAnimationEnd);
            wave.addEventListener("webkitAnimationEnd", handleAnimationEnd);

            function handleAnimationEnd() {
                console.log(`Animation ended on wave ${index}`);

                if (index === 0) {
                    // Only keep the first wave after animation ends
                    wave.classList.add("wave-end-state");

                    // Add icons to the first wave after animation ends
                    if (!wave.querySelector(".icons")) {
                        const icons = document.createElement("div");
                        icons.className = "icons";
                        icons.innerHTML = `
              <a href="https://github.com" target="_blank"><span class="material-icons">code</span></a>
              <a href="https://discord.com" target="_blank"><span class="material-icons">chat</span></a>
              <a href="https://linkedin.com" target="_blank"><span class="material-icons">business_center</span></a>
            `;
                        wave.appendChild(icons);
                    }
                } else {
                    // Remove other waves after their animation ends
                    wave.remove();
                }
            }
        });
    });
</script>
